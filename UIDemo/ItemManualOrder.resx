<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="plTicket.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAvCAYAAACCLMghAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAQHSURBVFhH7ZhZbExhFMfHTsSSlCCERMKD5UUkdpFY
        wotKbMUTmogt8WB5KO1Mpy2aak1bxnQsQ6ulnXYIQUjsjCH11NBSxB6JJdW0Okv7+f+vuXXnzteYjjAv
        8/BLT77vfOf8zznfvelcg9hjHAxSwXPwEryQUC9Zi3b9FXgG9oBBFJAdOGQVvtIzwld2Vk6pZO1v1pGL
        OdtSTbkU0OitqBTeStf/BTmRu5kCGrzlTrnTvwQ5RarpOwV8i5UAjKAxtgLS0ptiK8Bo/hFrAS2xFWDK
        8MYFxAXEBcQFxAXEBcQFRCzgta1IODdtjgj6ymKE0FkBnxwnhduc0Y5p7jxxPWW3Am3tHn1lMULorABi
        TVqlJCM7p0yV2vSRnQ0jGgFMwPayQtUmtLmm2rKzYUQrQJ0zq5bZ/1QA562dtQz6yM6GEY0A7R3oiGju
        QES/DTlf9db/CfrKYoSAnPi33B9xB9hedc6sUv2rzl9dI/SVxdDiO1MuWs1ZzQb8PCoIHLFLnfTwpjMB
        k6rvBbadNtdOrV2n2LKzegKHbeK741SNwZedM1EYzcJvPyZ1VGFr1Wrr8gvaO3JgcaKyz8QUQJ8/dcBf
        dFSItHTxprraZaivr+/5w1I4nwutuRalNbJDTEpoc8Zqu/XzZvKOusAPE8wh0kzi/b37N5HbQQE9wMC3
        DzzjWywFtraMvb+6UVElDRIViOW3Hxdt5izxtdxZ97K29gpyngWHKaA76AdGgEmfXed3tBws8LTm5Suf
        VKQBO4HvdJlozbOIJpv944dbtz3IcRFUADvIpICuoA8YDMaC2SCp8bjjnNKNInTDGUU38Jixk0rVzqpa
        xLwEXKAU2EAW2EYBXQDHwC4MA+PBHLDi09Vr2c2F1sesgJVIE0nwlaDqAwf5DUi8v3PXjVgXAKt2gHxg
        BFvAclVAN9ALDADDwTgwEySC5Ibiksi6gT2/zS7o+6Xq3FOc1Ve9H+wCyYCxZ/BFpBfRHwwFY8BksACs
        YTeUJyUnV6lQn1yZdU4ePzyJd273PZzRVm0BrHorWA0Yk7HHKAJ0InqCviABjAITwSyw5FVNzcaG4tNV
        nCtfXsq3RX7zsxaJtvRM8aXS9eRFXd1l+HZU9RLAWBMAYye0C9CIIHwyegOOhPdC243VH2/cyGiy2jyB
        zH3fAln7GhpPOJ6+efiIiZ2gDBwD2qpXgfaqAWMydu8QATohsm5QudINwIp2gkzAZNYgtLnGvfWAs1ar
        HgkYizEZu5tUAMFmJN1IAhvAdpAShDbXVoL5QK2a90qpGjCmEl+aXEvQUd8NVsLHdTpYBJYBXi6yFCwE
        3KNPWNWgixo/LKEMHgii7cYQMBqwtaxyWhDaTMw9+vCpCqn6d2yj4Se5hEe/sKx/NQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>