using Maticsoft.Common.model;
using System;
using System.Collections.Generic;
using System.Text;

namespace Maticsoft.BLL.ScanPortImage
{
    public class TicketSplitUtil
    {
        /// <summary>
        /// PL3不支持玩法拆分
        /// </summary>
        /// <param name="lt"></param>
        /// <returns></returns>
        public static List<lottery_ticket> pl3TicketSplit(lottery_ticket lt) {
            List<lottery_ticket> templist = new List<lottery_ticket>();
            templist.Add(lt);
            return templist;
        }


        /// <summary>
        /// 不能打5注的，需要拆开
        /// </summary>
        /// <param name="lt"></param>
        /// <param name="betnum">支持的注数</param>
        /// <returns></returns>
        public static List<lottery_ticket> splitByBetNum(lottery_ticket lt,int betnum) {
            List<lottery_ticket> templist = new List<lottery_ticket>();
            String[] betcodes = lt.bet_code.Split(';');
            int price = 0;
            int.TryParse(lt.bet_price, out price);
            double onemoney = price / betcodes.Length;
            if (betcodes.Length > betnum)
            {
                lottery_ticket thislt1 = new lottery_ticket();
                thislt1.license_id = lt.license_id;
                thislt1.username = lt.username;
                thislt1.multiple = lt.multiple;
                thislt1.play_type = lt.play_type;
                thislt1.ticket_id = lt.ticket_id;
                thislt1.bet_price = ((int)onemoney * betnum).ToString();

                lottery_ticket thislt2 = new lottery_ticket();
                thislt2.license_id = lt.license_id;
                thislt2.username = lt.username;
                thislt2.multiple = lt.multiple;
                thislt2.play_type = lt.play_type;
                thislt2.ticket_id = lt.ticket_id;
                thislt1.bet_price = (price-(int)onemoney * betnum).ToString();

                if (betnum == 3)
                {
                    thislt1.bet_code = betcodes[0] + ";" + betcodes[1] + ";" + betcodes[2];
                    thislt2.bet_code = betcodes[3] + ";" + (betcodes.Length == 5 ? ";" + betcodes[4] : "");
                }
                else
                {
                    thislt1.bet_code = betcodes[0] + ";" + betcodes[1] + ";" + betcodes[2] + ";" + betcodes[3];
                    thislt2.bet_code = betcodes[4];
                }
                

                templist.Add(thislt1);
                templist.Add(thislt2);
            }
            else
            {
                templist.Add(lt);
            }

            return templist;
        }
        /// <summary>
        /// 有些倍数支持不全，需要拆票
        /// </summary>
        /// <param name="lt"></param>
        /// <returns></returns>
        public static List<lottery_ticket> splitByMuliplt(lottery_ticket lt) {
            List<lottery_ticket> templist = new List<lottery_ticket>();
            int multiple = 0;
            int.TryParse(lt.multiple, out multiple);
            int price = 0;
            int.TryParse(lt.bet_price, out price);
            double onemoney = price / multiple;
            if (multiple > 10)//0-10不用拆
            {
                while (multiple > 0)
                {
                    lottery_ticket thislt = new lottery_ticket();
                    thislt.license_id = lt.license_id;
                    thislt.username = lt.username;
                    if (multiple >= 20)
                    {
                        thislt.multiple = "20";
                        thislt.bet_price = (20 * (int)onemoney).ToString();
                        multiple -= 20;
                    }
                    else if (multiple >= 15)
                    {
                        thislt.multiple = "15";
                        thislt.bet_price = (15 * (int)onemoney).ToString();
                        multiple -= 15;
                    }
                    else if (multiple >= 10)
                    {
                        thislt.multiple = "10";
                        thislt.bet_price = (10 * (int)onemoney).ToString();
                        multiple -= 10;
                    }
                    else
                    {
                        thislt.multiple = multiple.ToString();
                        thislt.bet_price = (multiple * (int)onemoney).ToString();
                        multiple -= multiple;
                    }

                    thislt.play_type = lt.play_type;
                    thislt.ticket_id = lt.ticket_id;
                    thislt.bet_code = lt.bet_code;

                    templist.Add(thislt);
                }
            }
            else
            {
                templist.Add(lt);
            }

           return templist;
        }
    }
}
