using Maticsoft.Common.Util;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;

namespace Maticsoft.BLL.ScanPortImage
{
    public abstract class ImageDataBlock
    {
        /// <summary>
        /// 赛事编号
        /// </summary>
        protected int[] raceNO = {1,2,4,5,10,20,40,50,100,200,400,500};
        /// <summary>
        /// 倍数编号
        /// </summary>
        protected int[] multipleNO = {1,2,3,4,5,6,7,8,9,10,20,30,40,50};

        /// <summary>
        /// 倍数编号R9
        /// </summary>
        protected int[] multipleNOR9 = { 20, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2};

        /// <summary>
        /// 该数据块的起始位置
        /// </summary>
        protected Point startPoint;

        /// <summary>
        /// 根据传入的数据，得到需要描的几个点的起始坐标
        /// </summary>
        /// <param name="data"></param>
        /// <returns></returns>
        public abstract void getPointArrayByData(List<Point>pointlist,String data);

        /// <summary>
        /// 获取倍数的点——适用于所有采种
        /// </summary>
        /// <param name="plist"></param>
        /// <param name="multiple"></param>
        /// <param name="startPoint"></param>
        public void getMultiplePoints(List<Point> plist, int multiple, Point startPoint,String linceseId)
        {
            if (linceseId.Equals(LicenseContants.License.GAMEIDJCLQ.ToString()) || linceseId.Equals(LicenseContants.License.GAMEIDJCZQ.ToString()))
            {
                while (multiple > 0)
                {
                    for (int i = multipleNO.Length - 1; i >= 0; i--)
                    {
                        if (multipleNO[i] <= multiple)
                        {
                            plist.Add(new Point(startPoint.X + (i % 4) * SPImageGlobal.S2S_WIDTH,
                    startPoint.Y + (int)((Math.Floor(i / 4d) + 1) * SPImageGlobal.BB_HIGH + SPImageGlobal.B2S_HIGH)));
                            multiple -= multipleNO[i];
                            break;
                        }
                    }
                }
            }
            else if (linceseId.Equals(LicenseContants.License.GAMEIDRXJ.ToString()) || linceseId.Equals(LicenseContants.License.GAMEIDSFC.ToString()))
            {//multipleNOR9
                while (multiple > 1)
                {
                    for (int i = 0; i < multipleNOR9.Length; i++)
                    {
                        if (multipleNOR9[i] == multiple)
                        {
                            plist.Add(new Point(SPImageGlobal.LEFT_SMALL_BB_X + (i + 1) * SPImageGlobal.S2S_WIDTH,
                    startPoint.Y + SPImageGlobal.B2S_HIGH));
                            multiple = 0;
                            break;
                        }
                    }
                }
            }
            else if (linceseId.Equals(LicenseContants.License.GAMEIDDLT.ToString()))//大乐透
            {
                String mstr = multiple.ToString("00");
                int sw = 0, gw = 0;
                int.TryParse(mstr.Substring(0,1),out sw);
                int.TryParse(mstr.Substring(1, 1), out gw);

                if (sw >0)
                {
                    plist.Add(new Point(SPImageGlobal.LEFT_SMALL_BB_X + (sw + 1) * SPImageGlobal.S2S_WIDTH,
                startPoint.Y + SPImageGlobal.B2S_HIGH));
                }

                plist.Add(new Point(SPImageGlobal.LEFT_SMALL_BB_X + ((gw > 0 ? gw : 10) + 1) * SPImageGlobal.S2S_WIDTH,
                    startPoint.Y + SPImageGlobal.BB_HIGH + SPImageGlobal.B2S_HIGH));
            }
            else if (linceseId.Equals(LicenseContants.License.GAMEIDBQC.ToString()) || linceseId.Equals(LicenseContants.License.GAMEIDJQC.ToString()))
            {//六场半全场、四场进球
                String mstr = multiple.ToString("00");
                int sw = 0, gw = 0;
                int.TryParse(mstr.Substring(0, 1), out sw);
                int.TryParse(mstr.Substring(1, 1), out gw);

                if (sw > 0)
                {
                    plist.Add(new Point(SPImageGlobal.LEFT_SMALL_BB_X + (9 - sw + 3) * SPImageGlobal.S2S_WIDTH,
                startPoint.Y + SPImageGlobal.B2S_HIGH));
                }

                plist.Add(new Point(SPImageGlobal.LEFT_SMALL_BB_X + (9 - (gw > 0 ? gw : 10) + 3) * SPImageGlobal.S2S_WIDTH,
                    startPoint.Y + SPImageGlobal.BB_HIGH + SPImageGlobal.B2S_HIGH));
            }
            else if (linceseId.Equals(LicenseContants.License.GAMEIDPLS.ToString()) || linceseId.Equals(LicenseContants.License.GAMEIDPLW.ToString())
                || linceseId.Equals(LicenseContants.License.GAMEIDQXC.ToString()))
            {
                if (multiple==1)//1倍不图点位
                {
                    return;
                }
                int x = SPImageGlobal.LEFT_SMALL_BB_X + 12 * SPImageGlobal.S2S_WIDTH, y = SPImageGlobal.START_POINT_Y+SPImageGlobal.B2S_HIGH;
                if (multiple ==20)
                {
                    y += 19 * SPImageGlobal.BB_HIGH;
                }
                else if (multiple ==15)
                {
                    y += 18 * SPImageGlobal.BB_HIGH;
                }
                else
                {
                    y += (7 + multiple) * SPImageGlobal.BB_HIGH;
                }

                plist.Add(new Point(x,y));
            }
            
        }
        /// <summary>
        /// 取竞彩赛事的点
        /// </summary>
        /// <param name="race"></param>
        /// <param name="startPoint"></param>
        /// <returns></returns>
        public void getSMGRacePoints(List<Point> plist, String race, Point startPoint)
        {            
            //第一步：取字符串前8位，算出是周几（20160506）
            int week = 1;
            int.TryParse(data2weekDayTranslation(race.Substring(0, 8)),out week);
            
            //第二步：取周几的点
            plist.Add(new Point(startPoint.X + ((week-1) % 4) * SPImageGlobal.S2S_WIDTH,
                startPoint.Y + (int)((Math.Ceiling(week/5d)+1)*SPImageGlobal.BB_HIGH+SPImageGlobal.B2S_HIGH)));
            //第三步：取对阵的点
            int racenum = 301;
            int.TryParse(race.Substring(8, 3),out racenum);
            while (racenum>0)
            {
                for (int i = raceNO.Length-1; i >= 0; i--)
                {
                    if (raceNO[i] <= racenum)
                    {
                        plist.Add(new Point(startPoint.X + (i % 4) * SPImageGlobal.S2S_WIDTH,
                startPoint.Y + (int)((Math.Ceiling((i+1)/4d)+2)*SPImageGlobal.BB_HIGH)+SPImageGlobal.B2S_HIGH));
                        racenum -= raceNO[i];
                        break;
                    }
                }
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="data">20150831->1</param>
        /// <returns></returns>
        private String data2weekDayTranslation(String data)
        {
            return DateUtil.data2weekDayTranslation(data);
            //return "7";
        }
    }
}
